export class SwipeEventDispatcher{constructor(t,e={}){this.evtMap={SWIPE_DOWN:[],SWIPE_LEFT:[],SWIPE_RIGHT:[],SWIPE_UP:[]},this.xDown=null,this.yDown=null,this.element=t,this.options=Object.assign({triggerPercent:.3},e),t.addEventListener("touchstart",t=>this.handleTouchStart(t),!1),t.addEventListener("touchend",t=>this.handleTouchEnd(t),!1)}on(t,e){this.evtMap[t].push(e)}off(t,e){this.evtMap[t]=this.evtMap[t].filter(t=>t!==e)}trigger(t,e){this.evtMap[t].map(t=>t(e))}handleTouchStart(t){this.xDown=t.touches[0].clientX,this.yDown=t.touches[0].clientY}handleTouchEnd(t){const e=t.changedTouches[0].clientX-this.xDown,h=t.changedTouches[0].clientY-this.yDown;Math.abs(Math.abs(e)>Math.abs(h)?e:h)/this.element.offsetWidth>this.options.triggerPercent&&(Math.abs(e)>Math.abs(h)?e<0?this.trigger("SWIPE_LEFT"):this.trigger("SWIPE_RIGHT"):h>0?this.trigger("SWIPE_DOWN"):this.trigger("SWIPE_UP"))}}export default SwipeEventDispatcher;
//# sourceMappingURL=swipe.js.map