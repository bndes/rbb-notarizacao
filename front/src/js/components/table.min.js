class BRTable{constructor(e,t,s){this.name=e,this.component=t,this._sequence=s,this._setBehavior()}_setBehavior(){this._cloneHeader(),this._setHeaderWidth(),this._toogleSearch(),this._toogleGrid(),this._setClickActions()}_cloneHeader(){for(const e of this.component.querySelectorAll(".responsive"))this._setSyncScroll(e);const e=document.createElement("div");this._setSyncScroll(e),e.classList.add("scroller");for(const t of this.component.querySelectorAll("table thead tr th")){const s=document.createElement("div");if(s.classList.add("item"),s.innerHTML=t.innerHTML,t.offsetWidth&&(s.style.flex=`1 0 ${t.offsetWidth}px`),e.appendChild(s),s.firstElementChild&&s.firstElementChild.classList.contains("br-checkbox")){const e=`headers-${this.component.id}-check-all`;for(const t of s.firstElementChild.querySelectorAll("input"))t.id=e;for(const t of s.firstElementChild.querySelectorAll("label"))t.setAttribute("for",e)}}const t=document.createElement("div");t.classList.add("headers"),t.appendChild(e);let s=!1;for(const e of this.component.querySelectorAll(".br-table > div"))e.classList.contains("responsive")&&(e.insertAdjacentElement("beforebegin",t),s=!0);s||this.component.appendChild(t)}_setSyncScroll(e){e.classList.add("syncscroll"),e.setAttribute("name","table-"+this._sequence)}_setHeaderWidth(){for(const e of this.component.querySelectorAll(".headers > div"))for(const[t,s]of this.component.querySelectorAll("table thead tr th").entries())e.children[t].style.flex=`1 0 ${s.offsetWidth}px`}_toogleSearch(){for(const e of this.component.querySelectorAll(".search-bar")){for(const t of this.component.querySelectorAll(".search-trigger"))t.addEventListener("click",()=>{e.classList.add("is-active")});for(const t of e.querySelectorAll(".search-close"))t.addEventListener("click",()=>{e.classList.remove("is-active")})}}_toogleGrid(){for(const e of this.component.querySelectorAll(".grid-large-trigger"))e.addEventListener("click",()=>{this.component.classList.remove("is-grid-small")});for(const e of this.component.querySelectorAll(".grid-small-trigger"))e.addEventListener("click",()=>{this.component.classList.add("is-grid-small")})}_setClickActions(){const e=this.component.querySelector(".headers [name='check'] [type='checkbox']"),t=this.component.querySelectorAll("tbody [name='check'] [type='checkbox']"),s=this.component.querySelector(".selected-bar"),c=this.component.querySelector(".selected-bar .info .select-all");if(t)for(const c of t)c.addEventListener("click",()=>{this._checkRow(c,s,t,e)});e&&e.addEventListener("click",()=>{this._checkAllTable(s,t,e)}),c&&c.addEventListener("click",()=>{this._checkAllTable(s,t,e)})}_setRow(e,t){const s=e.parentNode.parentNode.parentNode;t?(s.classList.add("is-selected"),e.parentNode.classList.add("is-inverted"),e.checked=!0):(s.classList.remove("is-selected"),e.parentNode.classList.remove("is-inverted"),e.checked=!1)}_checkRow(e,t,s,c){const o=e.checked;this._setRow(e,o),this._setSelectedBar(o?1:-1,t,s,c)}_checkAllRows(e){for(const t of e)this._setRow(t,!0)}_uncheckAllRows(e){for(const t of e)this._setRow(t,!1)}_checkAllTable(e,t,s){let c=t.length;const o=e.querySelector(".info .count");parseInt(o.innerHTML,10)===c?(this._uncheckAllRows(t),c*=-1):this._checkAllRows(t),this._setSelectedBar(c,e,t,s)}_setSelectedBar(e,t,s,c){const o=t.querySelector(".info .count"),l=t.querySelector(".info .text"),[i]=t.querySelector(".info .select-all").children,n=e<2?parseInt(o.innerHTML,10)+e:e;n>0?(t.classList.add("is-active"),o.innerHTML=n,l.innerHTML=n>1?"itens selecionados":"item selecionado",c&&c.parentNode.classList.add("is-checking"),i&&(i.classList.add("fa-minus-square"),i.classList.remove("fa-check-square")),n===s.length&&(c&&(c.checked=!0,c.parentNode.classList.remove("is-checking")),i&&(i.classList.remove("fa-minus-square"),i.classList.add("fa-check-square")))):(o.innerHTML=0,c&&(c.checked=!1,c.parentNode.classList.remove("is-checking")),i&&(i.classList.remove("fa-check-square"),i.classList.add("fa-minus-square")),t.classList.remove("is-active"))}
/**
   * @fileoverview syncscroll - scroll several areas simultaniously
   * @version 0.0.3
   *
   * @license MIT, see http://github.com/asvd/intence
   * @copyright 2015 asvd <heliosframework@gmail.com>
   */static _syncscroll(){const e=document.getElementsByClassName("syncscroll"),t={};let s,c,o,l,i;for(i in t)if(t.hasOwnProperty(i))for(s=0;s<t[i].length;s++)t[i][s].removeEventListener("scroll",t[i][s].syn,0);for(s=0;s<e.length;s++)if(l=c=0,o=e[s],i=o.getAttribute("name")){for(o=o.scroller||o;c<(t[i]=t[i]||[]).length;c++)l|=t[i][c]===o;l||t[i].push(o),o.eX=o.eY=0,this._elSyn(o,i,"scroll",e,"EventListener","length",t)}}static _elSyn(e,t,s,c,o,l,i){const n="add"+o,r=Math.round;e[n](s,()=>{const c=i[t];let o=e[s+"Left"],l=e[s+"Top"];const n=o/(e[s+"Width"]-e.clientWidth),a=l/(e[s+"Height"]-e.clientHeight),d=o!==e.eX,h=l!==e.eY;e.eX=o,e.eY=l,c.forEach(t=>{t!==e&&(d&&r(t[s+"Left"]-(o=t.eX=r(n*(t[s+"Width"]-t.clientWidth))))&&(t[s+"Left"]=o),h&&r(t[s+"Top"]-(l=t.eY=r(a*(t[s+"Height"]-t.clientHeight))))&&(t[s+"Top"]=l))})},0)}}const tableList=[];for(const[e,t]of window.document.querySelectorAll(".br-table").entries())tableList.push(new BRTable("br-table",t,e));BRTable._syncscroll();export default BRTable;
//# sourceMappingURL=table.js.map